<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>6G Connectivity Dashboard</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #0e0e1a;
            color: #fff;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .dashboard-container {
            width: 90%;
            max-width: 1200px;
            background-color: #1a1a2e;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            animation: fadeIn 1s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        h1 {
            text-align: center;
            color: #6a0dad;
            margin-bottom: 20px;
            font-size: 2.5em;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 25px;
        }

        .card {
            background-color: #2a2a4a;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.5);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-header h2 {
            margin: 0;
            font-size: 1.5em;
            color: #ccc;
        }

        .card-header .icon {
            font-size: 2em;
            color: #4CAF50;
        }

        .data-display {
            font-size: 2.2em;
            font-weight: bold;
            color: #00ffcc;
            text-align: center;
            letter-spacing: 1px;
        }

        .card p {
            font-size: 1em;
            color: #aaa;
            margin: 0;
        }

        .status {
            text-align: center;
            font-weight: bold;
            padding: 5px;
            border-radius: 5px;
            margin-top: 10px;
            text-transform: uppercase;
        }

        .status.connected {
            background-color: #4CAF50;
        }

        .status.disconnected {
            background-color: #f44336;
        }

        .traffic-bar-container {
            background-color: #333;
            border-radius: 5px;
            height: 15px;
            margin-top: 10px;
            overflow: hidden;
        }

        .traffic-bar {
            background-color: #6a0dad;
            height: 100%;
            transition: width 0.5s ease-in-out;
        }
    </style>
</head>
<body>

    <div class="dashboard-container">
        <h1>6G Connectivity Dashboard âœ¨</h1>
        <div class="grid-container">
            <div class="card" id="latency-card">
                <div class="card-header">
                    <h2>Latency</h2>
                    <span class="icon">ðŸš€</span>
                </div>
                <div class="data-display" id="latency-value">--</div>
                <p>Ping to server</p>
                <div class="status" id="latency-status">Connecting...</div>
            </div>

            <div class="card" id="throughput-card">
                <div class="card-header">
                    <h2>Throughput</h2>
                    <span class="icon">âš¡</span>
                </div>
                <div class="data-display" id="throughput-value">--</div>
                <p>Data rate (Gbps)</p>
                <div class="traffic-bar-container">
                    <div class="traffic-bar" id="throughput-bar"></div>
                </div>
            </div>

            <div class="card" id="signal-card">
                <div class="card-header">
                    <h2>Signal Strength</h2>
                    <span class="icon">ðŸ“¶</span>
                </div>
                <div class="data-display" id="signal-value">--</div>
                <p>Signal-to-Noise Ratio (SNR)</p>
                <div class="status" id="signal-status">Checking...</div>
            </div>

            <div class="card" id="devices-card">
                <div class="card-header">
                    <h2>Connected Devices</h2>
                    <span class="icon">ðŸ“±</span>
                </div>
                <div class="data-display" id="devices-value">--</div>
                <p>Total connected nodes</p>
            </div>
        </div>
    </div>

    <script>
        // JavaScript for dynamic data updates
        const latencyValue = document.getElementById('latency-value');
        const latencyStatus = document.getElementById('latency-status');
        const throughputValue = document.getElementById('throughput-value');
        const throughputBar = document.getElementById('throughput-bar');
        const signalValue = document.getElementById('signal-value');
        const signalStatus = document.getElementById('signal-status');
        const devicesValue = document.getElementById('devices-value');

        // Function to simulate random data updates
        function updateDashboard() {
            // Simulate Latency (10-200 microseconds)
            const latency = (Math.random() * 190 + 10).toFixed(2);
            latencyValue.textContent = `${latency} Î¼s`;
            if (latency < 50) {
                latencyStatus.textContent = 'Excellent';
                latencyStatus.className = 'status connected';
            } else {
                latencyStatus.textContent = 'Good';
                latencyStatus.className = 'status connected';
            }

            // Simulate Throughput (100-500 Gbps)
            const throughput = (Math.random() * 400 + 100).toFixed(2);
            throughputValue.textContent = `${throughput} Gbps`;
            const throughputPercentage = (throughput / 600) * 100; // Assuming max 600 Gbps
            throughputBar.style.width = `${throughputPercentage}%`;

            // Simulate Signal Strength (SNR 20-50 dB)
            const signal = (Math.random() * 30 + 20).toFixed(1);
            signalValue.textContent = `${signal} dB`;
            if (signal > 40) {
                signalStatus.textContent = 'Strong';
                signalStatus.className = 'status connected';
            } else {
                signalStatus.textContent = 'Good';
                signalStatus.className = 'status connected';
            }

            // Simulate Connected Devices (1-100)
            const devices = Math.floor(Math.random() * 100) + 1;
            devicesValue.textContent = devices;
        }

        // Update the dashboard every 2 seconds
        setInterval(updateDashboard, 2000);

        // Initial update
        updateDashboard();
    </script>
</body>
</html>
